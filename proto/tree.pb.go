// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v3.6.1
// source: tree.proto

package proto

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Vote int32

const (
	Vote_ValidVoteType   Vote = 0
	Vote_InvalidVoteType Vote = 1
	Vote_AbstainVoteType Vote = 2
)

// Enum value maps for Vote.
var (
	Vote_name = map[int32]string{
		0: "ValidVoteType",
		1: "InvalidVoteType",
		2: "AbstainVoteType",
	}
	Vote_value = map[string]int32{
		"ValidVoteType":   0,
		"InvalidVoteType": 1,
		"AbstainVoteType": 2,
	}
)

func (x Vote) Enum() *Vote {
	p := new(Vote)
	*p = x
	return p
}

func (x Vote) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Vote) Descriptor() protoreflect.EnumDescriptor {
	return file_tree_proto_enumTypes[0].Descriptor()
}

func (Vote) Type() protoreflect.EnumType {
	return &file_tree_proto_enumTypes[0]
}

func (x Vote) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Vote.Descriptor instead.
func (Vote) EnumDescriptor() ([]byte, []int) {
	return file_tree_proto_rawDescGZIP(), []int{0}
}

type Exposure struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Time        int64 `protobuf:"varint,1,opt,name=time,proto3" json:"time,omitempty"`
	Impressions int64 `protobuf:"varint,2,opt,name=impressions,proto3" json:"impressions,omitempty"`
	Revisits    int64 `protobuf:"varint,3,opt,name=revisits,proto3" json:"revisits,omitempty"`
}

func (x *Exposure) Reset() {
	*x = Exposure{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tree_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Exposure) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Exposure) ProtoMessage() {}

func (x *Exposure) ProtoReflect() protoreflect.Message {
	mi := &file_tree_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Exposure.ProtoReflect.Descriptor instead.
func (*Exposure) Descriptor() ([]byte, []int) {
	return file_tree_proto_rawDescGZIP(), []int{0}
}

func (x *Exposure) GetTime() int64 {
	if x != nil {
		return x.Time
	}
	return 0
}

func (x *Exposure) GetImpressions() int64 {
	if x != nil {
		return x.Impressions
	}
	return 0
}

func (x *Exposure) GetRevisits() int64 {
	if x != nil {
		return x.Revisits
	}
	return 0
}

type Engagements struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Votes []Vote `protobuf:"varint,1,rep,packed,name=votes,proto3,enum=proto.Vote" json:"votes,omitempty"`
}

func (x *Engagements) Reset() {
	*x = Engagements{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tree_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Engagements) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Engagements) ProtoMessage() {}

func (x *Engagements) ProtoReflect() protoreflect.Message {
	mi := &file_tree_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Engagements.ProtoReflect.Descriptor instead.
func (*Engagements) Descriptor() ([]byte, []int) {
	return file_tree_proto_rawDescGZIP(), []int{1}
}

func (x *Engagements) GetVotes() []Vote {
	if x != nil {
		return x.Votes
	}
	return nil
}

type Node struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id            int64        `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	ParentId      int64        `protobuf:"varint,2,opt,name=parent_id,json=parentId,proto3" json:"parent_id,omitempty"`
	Confidence    float32      `protobuf:"fixed32,3,opt,name=confidence,proto3" json:"confidence,omitempty"`
	Score         int64        `protobuf:"varint,4,opt,name=score,proto3" json:"score,omitempty"`
	LastScore     int64        `protobuf:"varint,5,opt,name=last_score,json=lastScore,proto3" json:"last_score,omitempty"`
	InactiveCount int64        `protobuf:"varint,6,opt,name=inactive_count,json=inactiveCount,proto3" json:"inactive_count,omitempty"`
	Children      []*Node      `protobuf:"bytes,7,rep,name=children,proto3" json:"children,omitempty"`
	Content       string       `protobuf:"bytes,8,opt,name=content,proto3" json:"content,omitempty"`
	Timestamp     int64        `protobuf:"varint,9,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	Action        int64        `protobuf:"varint,10,opt,name=action,proto3" json:"action,omitempty"`
	Exposure      *Exposure    `protobuf:"bytes,11,opt,name=exposure,proto3" json:"exposure,omitempty"`
	Engagements   *Engagements `protobuf:"bytes,12,opt,name=engagements,proto3" json:"engagements,omitempty"`
}

func (x *Node) Reset() {
	*x = Node{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tree_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Node) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Node) ProtoMessage() {}

func (x *Node) ProtoReflect() protoreflect.Message {
	mi := &file_tree_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Node.ProtoReflect.Descriptor instead.
func (*Node) Descriptor() ([]byte, []int) {
	return file_tree_proto_rawDescGZIP(), []int{2}
}

func (x *Node) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Node) GetParentId() int64 {
	if x != nil {
		return x.ParentId
	}
	return 0
}

func (x *Node) GetConfidence() float32 {
	if x != nil {
		return x.Confidence
	}
	return 0
}

func (x *Node) GetScore() int64 {
	if x != nil {
		return x.Score
	}
	return 0
}

func (x *Node) GetLastScore() int64 {
	if x != nil {
		return x.LastScore
	}
	return 0
}

func (x *Node) GetInactiveCount() int64 {
	if x != nil {
		return x.InactiveCount
	}
	return 0
}

func (x *Node) GetChildren() []*Node {
	if x != nil {
		return x.Children
	}
	return nil
}

func (x *Node) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

func (x *Node) GetTimestamp() int64 {
	if x != nil {
		return x.Timestamp
	}
	return 0
}

func (x *Node) GetAction() int64 {
	if x != nil {
		return x.Action
	}
	return 0
}

func (x *Node) GetExposure() *Exposure {
	if x != nil {
		return x.Exposure
	}
	return nil
}

func (x *Node) GetEngagements() *Engagements {
	if x != nil {
		return x.Engagements
	}
	return nil
}

type CalcTreeRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Value int32 `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *CalcTreeRequest) Reset() {
	*x = CalcTreeRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tree_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CalcTreeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CalcTreeRequest) ProtoMessage() {}

func (x *CalcTreeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_tree_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CalcTreeRequest.ProtoReflect.Descriptor instead.
func (*CalcTreeRequest) Descriptor() ([]byte, []int) {
	return file_tree_proto_rawDescGZIP(), []int{3}
}

func (x *CalcTreeRequest) GetValue() int32 {
	if x != nil {
		return x.Value
	}
	return 0
}

type CalcTreeResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Root          *Node   `protobuf:"bytes,1,opt,name=root,proto3" json:"root,omitempty"`
	Timestamps    []int64 `protobuf:"varint,2,rep,packed,name=timestamps,proto3" json:"timestamps,omitempty"`
	LastScore     int64   `protobuf:"varint,3,opt,name=last_score,json=lastScore,proto3" json:"last_score,omitempty"`
	InactiveCount int64   `protobuf:"varint,4,opt,name=inactive_count,json=inactiveCount,proto3" json:"inactive_count,omitempty"`
	Nodes         []*Node `protobuf:"bytes,5,rep,name=nodes,proto3" json:"nodes,omitempty"`
}

func (x *CalcTreeResponse) Reset() {
	*x = CalcTreeResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tree_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CalcTreeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CalcTreeResponse) ProtoMessage() {}

func (x *CalcTreeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_tree_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CalcTreeResponse.ProtoReflect.Descriptor instead.
func (*CalcTreeResponse) Descriptor() ([]byte, []int) {
	return file_tree_proto_rawDescGZIP(), []int{4}
}

func (x *CalcTreeResponse) GetRoot() *Node {
	if x != nil {
		return x.Root
	}
	return nil
}

func (x *CalcTreeResponse) GetTimestamps() []int64 {
	if x != nil {
		return x.Timestamps
	}
	return nil
}

func (x *CalcTreeResponse) GetLastScore() int64 {
	if x != nil {
		return x.LastScore
	}
	return 0
}

func (x *CalcTreeResponse) GetInactiveCount() int64 {
	if x != nil {
		return x.InactiveCount
	}
	return 0
}

func (x *CalcTreeResponse) GetNodes() []*Node {
	if x != nil {
		return x.Nodes
	}
	return nil
}

var File_tree_proto protoreflect.FileDescriptor

var file_tree_proto_rawDesc = []byte{
	0x0a, 0x0a, 0x74, 0x72, 0x65, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x05, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x22, 0x5c, 0x0a, 0x08, 0x45, 0x78, 0x70, 0x6f, 0x73, 0x75, 0x72, 0x65, 0x12,
	0x12, 0x0a, 0x04, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x74,
	0x69, 0x6d, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x69, 0x6d, 0x70, 0x72, 0x65, 0x73, 0x73, 0x69, 0x6f,
	0x6e, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x69, 0x6d, 0x70, 0x72, 0x65, 0x73,
	0x73, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x72, 0x65, 0x76, 0x69, 0x73, 0x69, 0x74,
	0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x72, 0x65, 0x76, 0x69, 0x73, 0x69, 0x74,
	0x73, 0x22, 0x30, 0x0a, 0x0b, 0x45, 0x6e, 0x67, 0x61, 0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x73,
	0x12, 0x21, 0x0a, 0x05, 0x76, 0x6f, 0x74, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0e, 0x32,
	0x0b, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x56, 0x6f, 0x74, 0x65, 0x52, 0x05, 0x76, 0x6f,
	0x74, 0x65, 0x73, 0x22, 0x8b, 0x03, 0x0a, 0x04, 0x4e, 0x6f, 0x64, 0x65, 0x12, 0x0e, 0x0a, 0x02,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1b, 0x0a, 0x09,
	0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x08, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x63, 0x6f, 0x6e,
	0x66, 0x69, 0x64, 0x65, 0x6e, 0x63, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x02, 0x52, 0x0a, 0x63,
	0x6f, 0x6e, 0x66, 0x69, 0x64, 0x65, 0x6e, 0x63, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x63, 0x6f,
	0x72, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x73, 0x63, 0x6f, 0x72, 0x65, 0x12,
	0x1d, 0x0a, 0x0a, 0x6c, 0x61, 0x73, 0x74, 0x5f, 0x73, 0x63, 0x6f, 0x72, 0x65, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x09, 0x6c, 0x61, 0x73, 0x74, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x12, 0x25,
	0x0a, 0x0e, 0x69, 0x6e, 0x61, 0x63, 0x74, 0x69, 0x76, 0x65, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0d, 0x69, 0x6e, 0x61, 0x63, 0x74, 0x69, 0x76, 0x65,
	0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x27, 0x0a, 0x08, 0x63, 0x68, 0x69, 0x6c, 0x64, 0x72, 0x65,
	0x6e, 0x18, 0x07, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0b, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e,
	0x4e, 0x6f, 0x64, 0x65, 0x52, 0x08, 0x63, 0x68, 0x69, 0x6c, 0x64, 0x72, 0x65, 0x6e, 0x12, 0x18,
	0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x74, 0x69, 0x6d, 0x65,
	0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x09, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x74, 0x69, 0x6d,
	0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x18, 0x0a, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x2b,
	0x0a, 0x08, 0x65, 0x78, 0x70, 0x6f, 0x73, 0x75, 0x72, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x0f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x45, 0x78, 0x70, 0x6f, 0x73, 0x75, 0x72,
	0x65, 0x52, 0x08, 0x65, 0x78, 0x70, 0x6f, 0x73, 0x75, 0x72, 0x65, 0x12, 0x34, 0x0a, 0x0b, 0x65,
	0x6e, 0x67, 0x61, 0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x12, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x45, 0x6e, 0x67, 0x61, 0x67, 0x65, 0x6d,
	0x65, 0x6e, 0x74, 0x73, 0x52, 0x0b, 0x65, 0x6e, 0x67, 0x61, 0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74,
	0x73, 0x22, 0x27, 0x0a, 0x0f, 0x43, 0x61, 0x6c, 0x63, 0x54, 0x72, 0x65, 0x65, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0xbc, 0x01, 0x0a, 0x10, 0x43,
	0x61, 0x6c, 0x63, 0x54, 0x72, 0x65, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x1f, 0x0a, 0x04, 0x72, 0x6f, 0x6f, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0b, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x4e, 0x6f, 0x64, 0x65, 0x52, 0x04, 0x72, 0x6f, 0x6f, 0x74,
	0x12, 0x1e, 0x0a, 0x0a, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x73, 0x18, 0x02,
	0x20, 0x03, 0x28, 0x03, 0x52, 0x0a, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x73,
	0x12, 0x1d, 0x0a, 0x0a, 0x6c, 0x61, 0x73, 0x74, 0x5f, 0x73, 0x63, 0x6f, 0x72, 0x65, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x6c, 0x61, 0x73, 0x74, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x12,
	0x25, 0x0a, 0x0e, 0x69, 0x6e, 0x61, 0x63, 0x74, 0x69, 0x76, 0x65, 0x5f, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0d, 0x69, 0x6e, 0x61, 0x63, 0x74, 0x69, 0x76,
	0x65, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x21, 0x0a, 0x05, 0x6e, 0x6f, 0x64, 0x65, 0x73, 0x18,
	0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0b, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x4e, 0x6f,
	0x64, 0x65, 0x52, 0x05, 0x6e, 0x6f, 0x64, 0x65, 0x73, 0x2a, 0x43, 0x0a, 0x04, 0x56, 0x6f, 0x74,
	0x65, 0x12, 0x11, 0x0a, 0x0d, 0x56, 0x61, 0x6c, 0x69, 0x64, 0x56, 0x6f, 0x74, 0x65, 0x54, 0x79,
	0x70, 0x65, 0x10, 0x00, 0x12, 0x13, 0x0a, 0x0f, 0x49, 0x6e, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x56,
	0x6f, 0x74, 0x65, 0x54, 0x79, 0x70, 0x65, 0x10, 0x01, 0x12, 0x13, 0x0a, 0x0f, 0x41, 0x62, 0x73,
	0x74, 0x61, 0x69, 0x6e, 0x56, 0x6f, 0x74, 0x65, 0x54, 0x79, 0x70, 0x65, 0x10, 0x02, 0x32, 0x4c,
	0x0a, 0x08, 0x43, 0x61, 0x6c, 0x63, 0x54, 0x72, 0x65, 0x65, 0x12, 0x40, 0x0a, 0x0b, 0x47, 0x65,
	0x74, 0x43, 0x61, 0x6c, 0x63, 0x54, 0x72, 0x65, 0x65, 0x12, 0x16, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x2e, 0x43, 0x61, 0x6c, 0x63, 0x54, 0x72, 0x65, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x17, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x43, 0x61, 0x6c, 0x63, 0x54, 0x72,
	0x65, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x42, 0x09, 0x5a, 0x07,
	0x2e, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_tree_proto_rawDescOnce sync.Once
	file_tree_proto_rawDescData = file_tree_proto_rawDesc
)

func file_tree_proto_rawDescGZIP() []byte {
	file_tree_proto_rawDescOnce.Do(func() {
		file_tree_proto_rawDescData = protoimpl.X.CompressGZIP(file_tree_proto_rawDescData)
	})
	return file_tree_proto_rawDescData
}

var file_tree_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_tree_proto_msgTypes = make([]protoimpl.MessageInfo, 5)
var file_tree_proto_goTypes = []interface{}{
	(Vote)(0),                // 0: proto.Vote
	(*Exposure)(nil),         // 1: proto.Exposure
	(*Engagements)(nil),      // 2: proto.Engagements
	(*Node)(nil),             // 3: proto.Node
	(*CalcTreeRequest)(nil),  // 4: proto.CalcTreeRequest
	(*CalcTreeResponse)(nil), // 5: proto.CalcTreeResponse
}
var file_tree_proto_depIdxs = []int32{
	0, // 0: proto.Engagements.votes:type_name -> proto.Vote
	3, // 1: proto.Node.children:type_name -> proto.Node
	1, // 2: proto.Node.exposure:type_name -> proto.Exposure
	2, // 3: proto.Node.engagements:type_name -> proto.Engagements
	3, // 4: proto.CalcTreeResponse.root:type_name -> proto.Node
	3, // 5: proto.CalcTreeResponse.nodes:type_name -> proto.Node
	4, // 6: proto.CalcTree.GetCalcTree:input_type -> proto.CalcTreeRequest
	5, // 7: proto.CalcTree.GetCalcTree:output_type -> proto.CalcTreeResponse
	7, // [7:8] is the sub-list for method output_type
	6, // [6:7] is the sub-list for method input_type
	6, // [6:6] is the sub-list for extension type_name
	6, // [6:6] is the sub-list for extension extendee
	0, // [0:6] is the sub-list for field type_name
}

func init() { file_tree_proto_init() }
func file_tree_proto_init() {
	if File_tree_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_tree_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Exposure); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tree_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Engagements); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tree_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Node); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tree_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CalcTreeRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tree_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CalcTreeResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_tree_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   5,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_tree_proto_goTypes,
		DependencyIndexes: file_tree_proto_depIdxs,
		EnumInfos:         file_tree_proto_enumTypes,
		MessageInfos:      file_tree_proto_msgTypes,
	}.Build()
	File_tree_proto = out.File
	file_tree_proto_rawDesc = nil
	file_tree_proto_goTypes = nil
	file_tree_proto_depIdxs = nil
}
